generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  username     String
  googleId     String?        @unique
  profileImage String?
  password     String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  refreshToken RefreshToken[]
  gameLists    GameList[]
  gameListLike GameListLike[]
}

model RefreshToken {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GameList {
  id          String  @id @default(cuid())
  userId      String
  title       String
  description String? // Optional description for the list
  isSystem    Boolean @default(false) // default list = favourites, played, etc
  isPublic    Boolean @default(false) // will show in everyones feeds (in future )

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user         User           @relation(fields: [userId], references: [id])
  items        GameListItem[]
  gameListLike GameListLike[]

  @@unique([userId, title]) // No duplicate list names for a user
  @@index([userId])
}

model GameListItem {
  id           String   @id @default(cuid())
  listId       String
  gameId       Int
  position     Int
  gameCoverUrl String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  gameList GameList @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@unique([listId, gameId]) // A game can't be added twice to the same list
}

model GameListLike {
  id         String @id @default(cuid())
  userId     String
  gameListId String

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  gameList GameList @relation(fields: [gameListId], references: [id], onDelete: Cascade)

  @@unique([userId, gameListId]) // one like per user per list
}
